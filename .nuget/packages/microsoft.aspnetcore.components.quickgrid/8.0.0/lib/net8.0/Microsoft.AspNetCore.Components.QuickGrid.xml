<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Components.QuickGrid</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Align">
            <summary>
            Describes alignment for a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> column.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.Align.Start">
            <summary>
            Justifies the content against the start of the container.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.Align.Center">
            <summary>
            Justifies the content at the center of the container.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.Align.End">
            <summary>
            Justifies the content at the end of the container.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.Align.Left">
            <summary>
            Justifies the content against the left of the container.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.Align.Right">
            <summary>
            Justifies the content at the right of the container.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1">
            <summary>
            An abstract base class for columns in a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Title">
            <summary>
            Title text for the column. This is rendered automatically if <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.HeaderTemplate" /> is not used.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Class">
            <summary>
            An optional CSS class name. If specified, this is included in the class attribute of table header and body cells
            for this column.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Align">
            <summary>
            If specified, controls the justification of table header and body cells for this column.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.HeaderTemplate">
            <summary>
            An optional template for this column's header cell. If not specified, the default header template
            includes the <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Title" /> along with any applicable sort indicators and options buttons.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.ColumnOptions">
             <summary>
             If specified, indicates that this column has this associated options UI. A button to display this
             UI will be included in the header cell by default.
            
             If <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.HeaderTemplate" /> is used, it is left up to that template to render any relevant
             "show options" UI and invoke the grid's <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ShowColumnOptionsAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0})" />).
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Sortable">
             <summary>
             Indicates whether the data should be sortable by this column.
            
             The default value may vary according to the column type (for example, a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1" />
             is sortable by default if any <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1.SortBy" /> parameter is specified).
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.SortBy">
            <summary>
            Specifies sorting rules for a column.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.InitialSortDirection">
            <summary>
            Indicates which direction to sort in
            if <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.IsDefaultSortColumn"/> is true.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.IsDefaultSortColumn">
            <summary>
            Indicates whether this column should be sorted by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.PlaceholderTemplate">
            <summary>
            If specified, virtualized grids will use this template to render cells whose data has not yet been loaded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Grid">
            <summary>
            Gets a reference to the enclosing <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.CellContent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,`0)">
            <summary>
            Overridden by derived components to provide rendering logic for the column's cells.
            </summary>
            <param name="builder">The current <see cref="T:Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder" />.</param>
            <param name="item">The data for the row being rendered.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.HeaderContent">
            <summary>
            Gets or sets a <see cref="T:Microsoft.AspNetCore.Components.RenderFragment" /> that will be rendered for this column's header cell.
            This allows derived components to change the header output. However, derived components are then
            responsible for using <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.HeaderTemplate" /> within that new output if they want to continue
            respecting that option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.IsSortableByDefault">
             <summary>
             Get a value indicating whether this column should act as sortable if no value was set for the
             <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Sortable" /> parameter. The default behavior is not to be
             sortable unless <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.Sortable" /> is true.
            
             Derived components may override this to implement alternative default sortability rules.
             </summary>
             <returns>True if the column should be sortable by default, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1">
            <summary>
            Represents a sort order specification used within <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1.ByAscending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance that sorts according to the specified <paramref name="expression"/>, ascending.
            </summary>
            <typeparam name="U">The type of the expression's value.</typeparam>
            <param name="expression">An expression defining how a set of <typeparamref name="TGridItem"/> instances are to be sorted.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance representing the specified sorting rule.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1.ByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance that sorts according to the specified <paramref name="expression"/>, descending.
            </summary>
            <typeparam name="U">The type of the expression's value.</typeparam>
            <param name="expression">An expression defining how a set of <typeparamref name="TGridItem"/> instances are to be sorted.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance representing the specified sorting rule.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1.ThenAscending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Updates a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance by appending a further sorting rule.
            </summary>
            <typeparam name="U">The type of the expression's value.</typeparam>
            <param name="expression">An expression defining how a set of <typeparamref name="TGridItem"/> instances are to be sorted.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance representing the specified sorting rule.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1.ThenDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Updates a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance by appending a further sorting rule.
            </summary>
            <typeparam name="U">The type of the expression's value.</typeparam>
            <param name="expression">An expression defining how a set of <typeparamref name="TGridItem"/> instances are to be sorted.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridSort`1"/> instance representing the specified sorting rule.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> column whose cells display a single value.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
            <typeparam name="TProp">The type of the value being displayed in the column's cells.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2.Property">
            <summary>
            Defines the value to be displayed in this column's cells.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2.Format">
             <summary>
             Optionally specifies a format string for the value.
            
             Using this requires the <typeparamref name="TProp"/> type to implement <see cref="T:System.IFormattable" />.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2.SortBy">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn`2.CellContent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,`0)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.SortedProperty">
            <summary>
            Holds the name of a property and the direction to sort by.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.SortedProperty.PropertyName">
            <summary>
            The property name for the sorting rule.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.SortedProperty.Direction">
            <summary>
            The direction to sort by.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> column whose cells render a supplied template.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1.ChildContent">
            <summary>
            Specifies the content to be rendered for each row in the table.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1.SortBy">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1.CellContent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,`0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn`1.IsSortableByDefault">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProvider`1">
            <summary>
            A callback that provides data for a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
            <param name="request">Parameters describing the data being requested.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1" /> that gives the data to be displayed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1">
            <summary>
            Parameters for data to be supplied by a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>'s <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.StartIndex">
            <summary>
            The zero-based index of the first item to be supplied.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.Count">
            <summary>
            If set, the maximum number of items to be supplied. If not set, the maximum number is unlimited.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByColumn">
             <summary>
             Specifies which column represents the sort order.
            
             Rather than inferring the sort rules manually, you should normally call either <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.ApplySorting(System.Linq.IQueryable{`0})"/>
             or <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.GetSortByProperties"/>, since they also account for <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByColumn" /> and <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByAscending" /> automatically.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByAscending">
             <summary>
             Specifies the current sort direction.
            
             Rather than inferring the sort rules manually, you should normally call either <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.ApplySorting(System.Linq.IQueryable{`0})"/>
             or <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.GetSortByProperties"/>, since they also account for <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByColumn" /> and <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.SortByAscending" /> automatically.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.CancellationToken">
            <summary>
            A token that indicates if the request should be cancelled.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.ApplySorting(System.Linq.IQueryable{`0})">
            <summary>
            Applies the request's sorting rules to the supplied <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1"/>.</param>
            <returns>A new <see cref="T:System.Linq.IQueryable`1"/> representing the <paramref name="source"/> with sorting rules applied.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderRequest`1.GetSortByProperties">
            <summary>
            Produces a collection of (property name, direction) pairs representing the sorting rules.
            </summary>
            <returns>A collection of (property name, direction) pairs representing the sorting rules</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1">
            <summary>
            Holds data being supplied to a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>'s <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1.Items">
            <summary>
            The items being supplied.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1.TotalItemCount">
             <summary>
             The total number of items that may be displayed in the grid. This normally means the total number of items in the
             underlying data source after applying any filtering that is in effect.
            
             If the grid is paginated, this should include all pages. If the grid is virtualized, this should include the entire scroll range.
             </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult">
            <summary>
            Provides convenience methods for constructing <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult.From``1(System.Collections.Generic.ICollection{``0},System.Int32)">
            <summary>
            Supplies an instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1"/>.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
            <param name="items">The items being supplied.</param>
            <param name="totalItemCount">The total numer of items that exist. See <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1.TotalItemCount"/> for details.</param>
            <returns>An instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.GridItemsProviderResult`1"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor">
            <summary>
            Provides methods for asynchronous evaluation of queries against an <see cref="T:System.Linq.IQueryable`1" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor.IsSupported``1(System.Linq.IQueryable{``0})">
            <summary>
            Determines whether the <see cref="T:System.Linq.IQueryable`1" /> is supported by this <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor"/> type.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="queryable">An <see cref="T:System.Linq.IQueryable`1" /> instance.</param>
            <returns>True if this <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor"/> instance can perform asynchronous queries for the supplied <paramref name="queryable"/>, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor.CountAsync``1(System.Linq.IQueryable{``0})">
            <summary>
            Asynchronously counts the items in the <see cref="T:System.Linq.IQueryable`1" />, if supported.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="queryable">An <see cref="T:System.Linq.IQueryable`1" /> instance.</param>
            <returns>The number of items in <paramref name="queryable"/>.</returns>.
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.IAsyncQueryExecutor.ToArrayAsync``1(System.Linq.IQueryable{``0})">
            <summary>
            Asynchronously materializes the <see cref="T:System.Linq.IQueryable`1" /> as an array, if supported.
            </summary>
            <typeparam name="T">The data type.</typeparam>
            <param name="queryable">An <see cref="T:System.Linq.IQueryable`1" /> instance.</param>
            <returns>The items in the <paramref name="queryable"/>.</returns>.
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.ColumnsCollectedNotifier`1">
            <summary>
            For internal use only. Do not use.
            </summary>
            <typeparam name="TGridItem">For internal use only. Do not use.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.ColumnsCollectedNotifier`1.Attach(Microsoft.AspNetCore.Components.RenderHandle)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.ColumnsCollectedNotifier`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.Defer">
            <summary>
            For internal use only. Do not use.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.Defer.ChildContent">
            <summary>
            For internal use only. Do not use.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.Defer.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            For internal use only. Do not use.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1">
            <summary>
            Represents an event that you may subscribe to. This differs from normal C# events in that the handlers
            are EventCallback<typeparamref name="T"/>, and so may have async behaviors and cause component re-rendering
            while retaining error flow.
            </summary>
            <typeparam name="T">A type for the eventargs.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1.InvokeCallbacksAsync(`0)">
            <summary>
            Invokes all the registered callbacks sequentially, in an undefined order.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscriber`1">
            <summary>
            Represents a subscriber that may be subscribe to an <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1"/>.
            The subscription can move between <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1"/> instances over time,
            and automatically unsubscribes from earlier <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1"/> instances
            whenever it moves to a new one.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscriber`1.SubscribeOrMove(Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable{`0})">
             <summary>
             Creates a subscription on the <paramref name="subscribable"/>, or moves any existing subscription to it
             by first unsubscribing from the previous <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventCallbackSubscribable`1"/>.
            
             If the supplied <paramref name="subscribable"/> is null, no new subscription will be created, but any
             existing one will still be unsubscribed.
             </summary>
             <param name="subscribable"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Infrastructure.EventHandlers">
            <summary>
            Configures event handlers for <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState">
            <summary>
            Holds state to represent pagination in a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.ItemsPerPage">
            <summary>
            Gets or sets the number of items on each page.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.CurrentPageIndex">
            <summary>
            Gets the current zero-based page index. To set it, call <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.SetCurrentPageIndexAsync(System.Int32)" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.TotalItemCount">
            <summary>
            Gets the total number of items across all pages, if known. The value will be null until an
            associated <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> assigns a value after loading data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.LastPageIndex">
            <summary>
            Gets the zero-based index of the last page, if known. The value will be null until <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.TotalItemCount"/> is known.
            </summary>
        </member>
        <member name="E:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.TotalItemCountChanged">
            <summary>
            An event that is raised when the total item count has changed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.PaginationState.SetCurrentPageIndexAsync(System.Int32)">
            <summary>
            Sets the current page index, and notifies any associated <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>
            to fetch and render updated data.
            </summary>
            <param name="pageIndex">The new, zero-based page index.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the completion of the operation.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.Paginator">
            <summary>
            A component that provides a user interface for <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.Paginator.State">
            <summary>
            Specifies the associated <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState"/>. This parameter is required.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.Paginator.SummaryTemplate">
            <summary>
            Optionally supplies a template for rendering the page count summary.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Paginator.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Paginator" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Paginator.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.Paginator.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1">
            <summary>
            A component that displays a grid.
            </summary>
            <typeparam name="TGridItem">The type of data represented by each row in the grid.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items">
             <summary>
             A queryable source of data for the grid.
            
             This could be in-memory data converted to queryable using the
             <see cref="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)"/> extension method,
             or an EntityFramework DataSet or an <see cref="T:System.Linq.IQueryable"/> derived from it.
            
             You should supply either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items"/> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider"/>, but not both.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider">
             <summary>
             A callback that supplies data for the rid.
            
             You should supply either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items"/> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider"/>, but not both.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Class">
            <summary>
            An optional CSS class name. If given, this will be included in the class attribute of the rendered table.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Theme">
            <summary>
            A theme name, with default value "default". This affects which styling rules match the table.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ChildContent">
            <summary>
            Defines the child components of this instance. For example, you may define columns by adding
            components derived from the <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1"/> base class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize">
             <summary>
             If true, the grid will be rendered with virtualization. This is normally used in conjunction with
             scrolling and causes the grid to fetch and render only the data around the current scroll viewport.
             This can greatly improve the performance when scrolling through large data sets.
            
             If you use <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize"/>, you should supply a value for <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemSize"/> and must
             ensure that every row renders with the same constant height.
            
             Generally it's preferable not to use <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize"/> if the amount of data being rendered
             is small or if you are using pagination.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemSize">
            <summary>
            This is applicable only when using <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Virtualize"/>. It defines an expected height in pixels for
            each row, allowing the virtualization mechanism to fetch the correct number of items to match the display
            size and to ensure accurate scrolling.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemKey">
             <summary>
             Optionally defines a value for @key on each rendered row. Typically this should be used to specify a
             unique identifier, such as a primary key value, for each data item.
            
             This allows the grid to preserve the association between row elements and data items based on their
             unique identifiers, even when the TGridItem instances are replaced by new copies (for
             example, after a new query against the underlying data store).
            
             If not set, the @key will be the TGridItem instance itself.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Pagination">
             <summary>
             Optionally links this <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> instance with a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState"/> model,
             causing the grid to fetch and render only the current page of data.
            
             This is normally used in conjunction with a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.Paginator"/> component or some other UI logic
             that displays and updates the supplied <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.PaginationState"/> instance.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.SortByColumnAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0},Microsoft.AspNetCore.Components.QuickGrid.SortDirection)">
            <summary>
            Sets the grid's current sort column to the specified <paramref name="column"/>.
            </summary>
            <param name="column">The column that defines the new sort order.</param>
            <param name="direction">The direction of sorting. If the value is <see cref="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Auto"/>, then it will toggle the direction on each call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the completion of the operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ShowColumnOptionsAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0})">
            <summary>
            Displays the <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.ColumnBase`1.ColumnOptions"/> UI for the specified column, closing any other column
            options UI that was previously displayed.
            </summary>
            <param name="column">The column whose options are to be displayed, if any are available.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.RefreshDataAsync">
            <summary>
            Instructs the grid to re-fetch and render the current data from the supplied data source
            (either <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.Items"/> or <see cref="P:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.ItemsProvider"/>).
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the completion of the operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Components.QuickGrid.SortDirection">
            <summary>
            Describes the direction in which a <see cref="T:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1"/> column is sorted.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Auto">
            <summary>
            Automatic sort order. When used with <see cref="M:Microsoft.AspNetCore.Components.QuickGrid.QuickGrid`1.SortByColumnAsync(Microsoft.AspNetCore.Components.QuickGrid.ColumnBase{`0},Microsoft.AspNetCore.Components.QuickGrid.SortDirection)"/>,
            the sort order will automatically toggle between <see cref="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Ascending"/> and <see cref="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Descending"/> on successive calls, and
            resets to <see cref="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Ascending"/> whenever the specified column is changed.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Components.QuickGrid.SortDirection.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
    </members>
</doc>
